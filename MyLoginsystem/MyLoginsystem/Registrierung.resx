<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>